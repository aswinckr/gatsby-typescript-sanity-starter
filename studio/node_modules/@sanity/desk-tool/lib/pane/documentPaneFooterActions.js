"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDocumentPaneFooterActions = getDocumentPaneFooterActions;

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _contentCopyIcon = _interopRequireDefault(require("part:@sanity/base/content-copy-icon"));

var _trashIcon = _interopRequireDefault(require("part:@sanity/base/trash-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/prefer-default-export, complexity
function getDocumentPaneFooterActions(props) {
  var draft = props.draft,
      enabledActions = props.enabledActions,
      errors = props.errors,
      handlers = props.handlers,
      isCreatingDraft = props.isCreatingDraft,
      isLiveEditEnabled = props.isLiveEditEnabled,
      isPublishing = props.isPublishing,
      isReconnecting = props.isReconnecting,
      isUnpublishing = props.isUnpublishing,
      published = props.published;
  var isNonexistent = !draft && !published;
  var actions = [enabledActions.includes('publish') && {
    color: 'primary',
    disabled: isCreatingDraft || isPublishing || isReconnecting || isUnpublishing || !draft || errors.length > 0,
    id: 'publish',
    label: 'Publish',
    handleClick: handlers.publish,
    hotkeys: ['Ctrl', 'Alt', 'P']
  }, enabledActions.includes('delete') && !isLiveEditEnabled && {
    id: 'discardChanges',
    label: 'Discard changes',
    icon: _closeIcon.default,
    handleClick: handlers.discardChanges,
    disabled: !draft || !published
  }, enabledActions.includes('delete') && !isLiveEditEnabled && {
    disabled: !published,
    id: 'unpublish',
    label: 'Unpublish',
    icon: _closeIcon.default,
    handleClick: handlers.unpublish
  }, enabledActions.includes('create') && {
    disabled: isNonexistent,
    id: 'duplicate',
    label: 'Duplicate',
    icon: _contentCopyIcon.default,
    handleClick: handlers.duplicate
  }, enabledActions.includes('delete') && {
    disabled: isNonexistent,
    id: 'delete',
    label: 'Delete',
    icon: _trashIcon.default,
    handleClick: handlers.delete
  }];
  return actions.filter(Boolean);
}